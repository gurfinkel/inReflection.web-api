version: '3'

services:

##############################
#    Setup client container
##############################
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: nodejs
    container_name: client
    restart: unless-stopped
    env_file: .env
    environment:
      - CLIENT_APP_PORT=$CLIENT_APP_PORT
    expose:
      - ${CLIENT_APP_PORT}
    ports:
      - ${CLIENT_APP_PORT}:${CLIENT_APP_PORT}
    volumes:
      - ./client:/home/node/looks-www
    networks:
      - app-network
    links:
      - server
    command: npm start

##############################
#    Setup server container
##############################
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: nodejs
    container_name: server
    restart: unless-stopped
    env_file: .env
    environment:
      - SERVER_APP_PORT=$SERVER_APP_PORT
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    expose:
      - ${SERVER_APP_PORT}
    ports:
      - ${SERVER_APP_PORT}:${SERVER_APP_PORT}
    volumes:
      - ./server:/home/node/looks-api
    networks:
      - app-network
    command: /home/node/looks-api/wait-for.sh db:${MONGO_PORT} -- /home/node/looks-api/node_modules/.bin/nodemon /home/node/looks-api/src/index.js

##############################
#    Setup db container
##############################
  db:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
