apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: nodejs
  name: nodejs
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: nodejs
    spec:
      terminationGracePeriodSeconds: 120
      containers:
      - env:
        - name: MONGO_DB
          valueFrom:
            configMapKeyRef:
              key: MONGO_DB
              name: nodejs-env
        - name: MONGO_HOSTNAME
          value: db
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_PASSWORD
        - name: MONGO_PORT
          valueFrom:
            configMapKeyRef:
              key: MONGO_PORT
              name: nodejs-env
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_USERNAME
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: nodejs-env
        - name: NODE_PORT
          valueFrom:
            configMapKeyRef:
              key: NODE_PORT
              name: nodejs-env
        name: nodejs
        image: flatorez/inreflection-web-api:1.0.1
        imagePullPolicy: "Always"
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: "250m"
            memory: "96Mi"
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
            scheme: HTTP
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTP
          periodSeconds: 3
      initContainers:
        - name: init-db
          image: busybox
          command: ['sh', '-c', 'until nc -z db:27017; do echo waiting for db; sleep 2; done;']
      restartPolicy: Always
status: {}
